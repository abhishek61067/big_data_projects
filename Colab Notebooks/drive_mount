{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"drive_mount","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyM+l84GC3GxucsGbKQOAeIy"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"14XjapP3nhnM","executionInfo":{"status":"ok","timestamp":1627014555603,"user_tz":-345,"elapsed":432,"user":{"displayName":"abhishek bhattarai","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiVh6QVsQBl_9vishNjl9kiNT4XkY5Sc0Vs8j1imQ=s64","userId":"07090451475801133090"}},"outputId":"d2f4da58-e994-4c23-d6e9-29420b49e038"},"source":["from google.colab import drive\n","drive.mount('/content/drive')\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"yaF6TLWcn_GG"},"source":["f = open('/content/drive/My Drive/Colab Notebooks/train.csv','r')\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZLsXCe2Co1EE"},"source":["path = '/content/drive/My Drive/Colab Notebooks/train.csv'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"uwbLMIyGo9VO"},"source":["import pandas as pd\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"quyKUbQLpCib"},"source":["df = pd.read_csv(path)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":496},"id":"460SsHLgpKL_","executionInfo":{"status":"ok","timestamp":1627014892457,"user_tz":-345,"elapsed":410,"user":{"displayName":"abhishek bhattarai","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiVh6QVsQBl_9vishNjl9kiNT4XkY5Sc0Vs8j1imQ=s64","userId":"07090451475801133090"}},"outputId":"c86167ca-f11c-4810-bac4-fc2552c47fd0"},"source":["df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>7.2500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>C85</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>7.9250</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113803</td>\n","      <td>53.1000</td>\n","      <td>C123</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Allen, Mr. William Henry</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>373450</td>\n","      <td>8.0500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   PassengerId  Survived  Pclass  ...     Fare Cabin  Embarked\n","0            1         0       3  ...   7.2500   NaN         S\n","1            2         1       1  ...  71.2833   C85         C\n","2            3         1       3  ...   7.9250   NaN         S\n","3            4         1       1  ...  53.1000  C123         S\n","4            5         0       3  ...   8.0500   NaN         S\n","\n","[5 rows x 12 columns]"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XdV2pG_OqXnf","executionInfo":{"status":"ok","timestamp":1627015215287,"user_tz":-345,"elapsed":18,"user":{"displayName":"abhishek bhattarai","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiVh6QVsQBl_9vishNjl9kiNT4XkY5Sc0Vs8j1imQ=s64","userId":"07090451475801133090"}},"outputId":"1c70892a-6e6e-4770-c2c4-9a1a49912e97"},"source":["import os \n","os.listdir('/content/drive/My Drive/Colab Notebooks')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Untitled0.ipynb', 'Numpy_Basics.ipynb', 'Untitled1.ipynb', 'train.csv']"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"sH1sJLb5r9VY"},"source":["import matplotlib.pyplot as plt\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"cCY8y1vQsBoL"},"source":["import numpy as np\n","\n","x = np.array([1,2,3,4])\n","y = np.array([100, 300, 500, 700])\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_Z7NIkFDsWVB","colab":{"base_uri":"https://localhost:8080/","height":282},"executionInfo":{"status":"ok","timestamp":1627015714335,"user_tz":-345,"elapsed":544,"user":{"displayName":"abhishek bhattarai","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiVh6QVsQBl_9vishNjl9kiNT4XkY5Sc0Vs8j1imQ=s64","userId":"07090451475801133090"}},"outputId":"ea5d035d-1666-463c-e5ab-ceb9fdf9a6b4"},"source":["plt.plot(x,y)\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7fba15a9d5d0>]"]},"metadata":{"tags":[]},"execution_count":20},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]}]}